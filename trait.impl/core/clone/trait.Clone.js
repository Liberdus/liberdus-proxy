(function() {
    var implementors = Object.fromEntries([["liberdus_proxy",[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"liberdus_proxy/rpc/enum.RpcErrorCode.html\" title=\"enum liberdus_proxy::rpc::RpcErrorCode\">RpcErrorCode</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"liberdus_proxy/archivers/struct.Archiver.html\" title=\"struct liberdus_proxy::archivers::Archiver\">Archiver</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"liberdus_proxy/collector/struct.CollectorAccountResp.html\" title=\"struct liberdus_proxy::collector::CollectorAccountResp\">CollectorAccountResp</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"liberdus_proxy/collector/struct.OriginalTxData.html\" title=\"struct liberdus_proxy::collector::OriginalTxData\">OriginalTxData</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"liberdus_proxy/config/struct.Config.html\" title=\"struct liberdus_proxy::config::Config\">Config</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"liberdus_proxy/config/struct.LocalSource.html\" title=\"struct liberdus_proxy::config::LocalSource\">LocalSource</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"liberdus_proxy/config/struct.ShardusMonitorProxyConfig.html\" title=\"struct liberdus_proxy::config::ShardusMonitorProxyConfig\">ShardusMonitorProxyConfig</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"liberdus_proxy/config/struct.StandaloneNetworkConfig.html\" title=\"struct liberdus_proxy::config::StandaloneNetworkConfig\">StandaloneNetworkConfig</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"liberdus_proxy/config/struct.TLSConfig.html\" title=\"struct liberdus_proxy::config::TLSConfig\">TLSConfig</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"liberdus_proxy/liberdus/struct.Consensor.html\" title=\"struct liberdus_proxy::liberdus::Consensor\">Consensor</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"liberdus_proxy/rpc/struct.RpcError.html\" title=\"struct liberdus_proxy::rpc::RpcError\">RpcError</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"liberdus_proxy/rpc/struct.RpcResponse.html\" title=\"struct liberdus_proxy::rpc::RpcResponse\">RpcResponse</a>"],["impl&lt;M: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.82.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"liberdus_proxy/rpc/struct.RpcRequest.html\" title=\"struct liberdus_proxy::rpc::RpcRequest\">RpcRequest</a>&lt;M&gt;"]]]]);
    if (window.register_implementors) {
        window.register_implementors(implementors);
    } else {
        window.pending_implementors = implementors;
    }
})()
//{"start":57,"fragment_lengths":[4017]}